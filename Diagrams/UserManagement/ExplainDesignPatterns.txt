We have implemented two design patterns:
1. Composite design Pattern:
	-Guest is the Leaf since he can't have any friends.(Not until he registers)
	- User is the component the abstract class
	-RegisteredUser is the Composite, since a RegisteredUser can have friends and his friends can have friends.
requestService is the mutual operation.

2. Iterator : 
We implemented the iterator pattern to enable us to access the ActiveUsers. Some examples where we will use this are :
1. To generate heat maps
2. ActiveUsers will also be used to get locations of other users 
to name only two.